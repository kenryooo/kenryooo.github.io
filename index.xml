<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kenryooo.net blog</title>
    <link>http://pages.kenryooo.net/index.xml</link>
    <description>Recent content on kenryooo.net blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sat, 07 Jan 2017 14:09:59 +0900</lastBuildDate>
    <atom:link href="http://pages.kenryooo.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo で作ったページを Github Pages に公開する</title>
      <link>http://pages.kenryooo.net/blog/hugo-%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92-github-pages-%E3%81%AB%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</link>
      <pubDate>Sat, 07 Jan 2017 14:09:59 +0900</pubDate>
      
      <guid>http://pages.kenryooo.net/blog/hugo-%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92-github-pages-%E3%81%AB%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;blog/ローカル環境で-hugo-を動かす/&#34;&gt;前回&lt;/a&gt; Hugo で作成した静的ファイルを、 Github Pages に公開する。公式の &lt;a href=&#34;http://gohugo.io/tutorials/github-pages-blog/&#34;&gt;Hosting on GitHub Pages&lt;/a&gt; を見ればできるが、手順を多少変えたので備忘録として公開しておく。&lt;/p&gt;

&lt;p&gt;まず Github Pages での公開方法にはざっくり2種類あって、どちらでも公開可能なのだが、ここでは User Pages を使った方法で進める。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Github Pages ざっくり分類&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Pages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gh-pages&lt;/code&gt; という orphan ブランチ(履歴の無いブランチ)を作成すると公開される。&lt;/li&gt;
&lt;li&gt;master ブランチ直下に &lt;code&gt;docs&lt;/code&gt; ディレクトリを作成して、静的ファイルを配置すると公開される。参考: &lt;a href=&#34;http://qiita.com/tonkotsuboy_com/items/f98667b89228b98bc096&#34;&gt;2016年新機能! GitHubのmasterブランチをWebページとして公開する手順&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;User/Organization Pages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;your_name&amp;gt;/&amp;lt;your_name&amp;gt;.github.io&lt;/code&gt; というリポジトリを作成すると master ブランチが公開される。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;リポジトリ作成&#34;&gt;リポジトリ作成&lt;/h3&gt;

&lt;p&gt;公開用リポジトリ(User Pages)とソース管理用のリポジトリの2つを用意する。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;your_name&amp;gt;/blog-hugo&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ソース管理用リポジトリ。リポジトリ名は自由。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;your_site&amp;gt;/public&lt;/code&gt; 以外の管理をする。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;your_name&amp;gt;/&amp;lt;your_name&amp;gt;.github.io&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;静的サイト公開用リポジトリ。User Pages なのでリポジトリ名はこの通りに作る。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;your_site&amp;gt;/public&lt;/code&gt; 配下を管理する。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.gitignore に themes を除外するように設定しておく。&lt;br /&gt;
※ 自分はやらなかったけど、個別の theme のリポジトリを submodule にしておくのがいいかも。&lt;/p&gt;

&lt;h3 id=&#34;ソース公開用リポジトリの作業&#34;&gt;ソース公開用リポジトリの作業&lt;/h3&gt;

&lt;p&gt;事前にローカルで作成済みの、プロジェクトのルートディレクトリ直下で行う。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd &amp;lt;your_site&amp;gt;  # プロジェクトのルートディレクトリ
$ git init
$ git remote add origin git@github.com:&amp;lt;your_name&amp;gt;/blog-hugo.git
$ git pull origin master
$ rm -rf public  # public は submodule としてあとで追加するのでいったん削除
$ git add -A
$ git commit -m &amp;quot;[add] Hugo template.&amp;quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;サイト公開用リポジトリの作業&#34;&gt;サイト公開用リポジトリの作業&lt;/h3&gt;

&lt;p&gt;git の submodule として追加する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd &amp;lt;your_site&amp;gt;  # プロジェクトのルートディレクトリ
$ git submodule add -b master git@github.com:&amp;lt;your_name&amp;gt;/&amp;lt;your_name&amp;gt;.github.io.git public
$ hugo  # 静的サイトが public 配下に再生成される
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;サイト公開時のデプロイ自動化&#34;&gt;サイト公開時のデプロイ自動化&lt;/h3&gt;

&lt;p&gt;上記で再生成した public 配下のページのデプロイを自動化する。これも公式ページのスクリプトがあるので最新版はそちらを参考にされたし。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ vi deploy.sh
#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project.
hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`

# Go To Public folder
cd public
# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back
cd ..

$ chmod +x deploy.sh
$ ./deploy.sh &amp;quot;Your optional commit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;deploy.sh も忘れずに push しておく。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add deploy.sh
$ git commit deploy.sh -m &amp;quot;[add] deploy script.&amp;quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;参考にしたサイト&#34;&gt;参考にしたサイト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.syati.info/post/create_hugo_2/&#34;&gt;Hugo Part 2 - Hugo で github にブログを立ち上げる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ローカル環境で Hugo を動かす</title>
      <link>http://pages.kenryooo.net/blog/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E7%92%B0%E5%A2%83%E3%81%A7-hugo-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/</link>
      <pubDate>Thu, 05 Jan 2017 12:00:00 +0900</pubDate>
      
      <guid>http://pages.kenryooo.net/blog/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E7%92%B0%E5%A2%83%E3%81%A7-hugo-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/</guid>
      <description>

&lt;h3 id=&#34;hugo-とは&#34;&gt;Hugo とは&lt;/h3&gt;

&lt;p&gt;Go 製の静的サイトジェネレータ。&lt;br /&gt;
静的ページの生成が高速で、シンプルなところが好み。&lt;/p&gt;

&lt;h3 id=&#34;インストール&#34;&gt;インストール&lt;/h3&gt;

&lt;p&gt;mac なら&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go 環境が設定済みなら下記でもいい&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;プロジェクト作成&#34;&gt;プロジェクト作成&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo new site &amp;lt;your_site&amp;gt;
$ cd &amp;lt;your_site&amp;gt; # ここがプロジェクトのルートディレクトリになる
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;テーマの適用&#34;&gt;テーマの適用&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;your_site&amp;gt;&lt;/code&gt; 配下の &lt;code&gt;themes&lt;/code&gt; というディレクトリ配下に配置する。&lt;/p&gt;

&lt;h4 id=&#34;すべてのテーマをまとめてインストールする場合&#34;&gt;すべてのテーマをまとめてインストールする場合&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone --depth 1 --recursive https://github.com/spf13/hugoThemes.git themes
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;テーマを個別に選んでからインストールする場合&#34;&gt;テーマを個別に選んでからインストールする場合&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;こちら&lt;/a&gt;からテーマを選んで、個別のリポジトリから &lt;code&gt;git clone&lt;/code&gt; する。ここでは &lt;a href=&#34;https://github.com/nishanths/cocoa-hugo-theme&#34;&gt;cocoa&lt;/a&gt; を例に進める。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/nishanths/cocoa-hugo-theme.git themes/cocoa
$ hugo -vw -t cocoa serve  # サーバを起動 http://localhost:1313/)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/hugoThemes#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;theme-のカスタマイズ&#34;&gt;Theme のカスタマイズ&lt;/h4&gt;

&lt;p&gt;カスタマイズするには &lt;code&gt;&amp;lt;your_site&amp;gt;/themes/&amp;lt;theme&amp;gt;/&lt;/code&gt; 配下を直接編集せずに、&lt;your_site&gt; 直下にディレクトリ・ファイルを追加する。追加するファイルは &lt;code&gt;&amp;lt;your_site&amp;gt;/themes/&amp;lt;theme&amp;gt;/exampleSite&lt;/code&gt; からコピーする。&lt;/p&gt;

&lt;p&gt;まず &lt;code&gt;exampleSite&lt;/code&gt; の &lt;code&gt;config.toml&lt;/code&gt; をコピーして、カスタマイズしていくと楽ちん。あとは、&lt;a href=&#34;http://gohugo.io/overview/configuration/&#34;&gt;Configuring Hugo&lt;/a&gt;のページを見ながらカスタマイズしていくとよい。&lt;/p&gt;

&lt;p&gt;ディレクトリ構造はこんな感じ&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pwd
&amp;lt;your_work_directory&amp;gt;/&amp;lt;your_site&amp;gt;/themes
$ tree
.
└── cocoa
    ├── LICENSE
    ├── README.md
    ├── archetypes
    │   └── default.md
    ├── exampleSite    # ここの配下から必要なものをコピーする
    │   ├── LICENSE
    │   ├── README.md
    │   ├── config.toml
    │   ├── content
    │   │   ├── about-this-site.html
    │   │   ├── blog
    │   │   │   ├── lesmiserables-hugo.md
    │   │   │   ├── metamorphosis-kafka.md
    │   │   │   └── use-at-instead-of-head.md
    │   │   ├── fixed
    │   │   │   ├── about.md
    │   │   │   ├── code.md
    │   │   │   └── colophon.md
    │   │   ├── posts.html
    │   │   └── writing.html
    │   └── static
    │       ├── css
    │       │   └── override.css
    │       └── img
    │           └── leaf.ico
    ├── images
    │   ├── screenshot.png
    │   └── tn.png
    ├── layouts
    │   ├── 404.html
    │   ├── _default
    │   │   ├── list.html
    │   │   └── single.html
    │   ├── blog
    │   │   └── single.html
    │   ├── fixed
    │   │   └── single.html
    │   ├── index.html
    │   └── partials
    │       ├── footer.html
    │       ├── footer_scripts.html
    │       ├── head.html
    │       ├── head_includes.html
    │       ├── header.html
    │       ├── li.html
    │       ├── meta.html
    │       └── page-heading.html
    ├── static
    │   ├── css
    │   │   ├── main.css
    │   │   ├── pygments.css
    │   │   └── reset.css
    │   └── img
    │       └── favicon.ico
    └── theme.toml
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://pages.kenryooo.net/about/</link>
      <pubDate>Tue, 03 Jan 2017 20:00:00 +0900</pubDate>
      
      <guid>http://pages.kenryooo.net/about/</guid>
      <description>&lt;p&gt;Work Location : Tokyo&lt;br /&gt;
Job : Architect&lt;br /&gt;
Favorite : Python, Go, AWS, GCP&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;colophon/&#34;&gt;About this site&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>colophon</title>
      <link>http://pages.kenryooo.net/colophon/</link>
      <pubDate>Tue, 03 Jan 2017 20:00:00 +0900</pubDate>
      
      <guid>http://pages.kenryooo.net/colophon/</guid>
      <description>&lt;p&gt;このサイトは kenryoo の個人ページで、気になった技術的な話題を中心に投稿していきます。&lt;/p&gt;

&lt;p&gt;こちらのページは &lt;a target=&#34;_blank&#34; href=&#34;//gohugo.io&#34;&gt;Hugo&lt;/a&gt; とテーマ &lt;a target=&#34;_blank&#34; href=&#34;//github.com/nishanths/cocoa-hugo-theme&#34;&gt;cocoa&lt;/a&gt; で作られています。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://pages.kenryooo.net/about-this-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pages.kenryooo.net/about-this-site/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;http://pages.kenryooo.net/colophon&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;0;url=/colophon&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://pages.kenryooo.net/posts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pages.kenryooo.net/posts/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;http://pages.kenryooo.net/blog&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;0;url=/blog&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://pages.kenryooo.net/writing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pages.kenryooo.net/writing/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;http://pages.kenryooo.net/posts&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;0;url=/posts&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>